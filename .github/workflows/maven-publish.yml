# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]

jobs:
  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    env:
      artifact_name: test-gitaction-workflow
      
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Get the release version
      id: get_version
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT
      
    - name: Set up JDK 17 for deploy to github packages
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Update package version
      run: mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}
      
    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
        
    - name: Upload jar files to release as release assets
      run: |
        #TAG=${GITHUB_REF/refs\/tags\//}
        echo "Tag name from github.ref_name: ${{  github.ref_name }}"
        #TAG=${{github.ref_name}}
        gh release upload ${{github.ref_name}} target/${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}.jar
        gh release upload ${{github.ref_name}} target/${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}-sources.jar
        gh release upload ${{github.ref_name}} target/${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}-javadoc.jar
        gh release upload ${{github.ref_name}} target/${{ env.artifact_name }}-${{ steps.get_version.outputs.VERSION }}-jar-with-dependencies.jar
      env:
        GITHUB_TOKEN: ${{ github.token }}
